# .github/workflows/build-and-deploy.yml
name: Build and Deploy NixOS

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Install Nix
      uses: cachix/install-nix-action@v23
      with:
        extra_nix_config: |
          experimental-features = nix-command flakes
          
    - name: Setup Cachix (optional - speeds up builds)
      uses: cachix/cachix-action@v12
      with:
        name: nix-community
        
    - name: Build NixOS system configuration
      run: |
        # Build the system closure
        nix build .#nixosConfigurations.droplet.config.system.build.toplevel \
          --print-build-logs \
          --out-link system-closure
          
    - name: Create deployment info
      run: |
        # Get the actual store path and save it
        SYSTEM_PATH=$(readlink ./system-closure)
        echo "System store path: $SYSTEM_PATH"
        echo "$SYSTEM_PATH" > system-path.txt
        
    - name: Upload system closure
      uses: actions/upload-artifact@v4
      with:
        name: nixos-system-closure
        path: |
          system-closure
          system-path.txt
        retention-days: 7
        
  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: nixos-system-closure
        
    - name: Install Nix
      uses: cachix/install-nix-action@v23
      
    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts
        
    - name: Deploy to server
      run: |
        # Debug: Check what we have
        echo "Contents of download directory:"
        ls -la
        
        # Get the system path
        if [ -f system-path.txt ]; then
          SYSTEM_PATH=$(cat system-path.txt)
          echo "System path from file: $SYSTEM_PATH"
        else
          echo "ERROR: system-path.txt not found"
          exit 1
        fi
        
        # Verify the path exists
        if [ ! -e "$SYSTEM_PATH" ]; then
          echo "ERROR: System path $SYSTEM_PATH does not exist"
          exit 1
        fi
        
        echo "Copying closure to server..."
        if timeout 900 nix-copy-closure --to root@${{ secrets.SERVER_HOST }} $SYSTEM_PATH; then
          echo "Copy successful, activating configuration..."
          
          # Activate the new configuration with error handling
          ssh root@${{ secrets.SERVER_HOST }} "
            set -e
            echo 'Starting activation...'
            if timeout 300 $SYSTEM_PATH/bin/switch-to-configuration test; then
              echo 'Test activation successful, making permanent...'
              $SYSTEM_PATH/bin/switch-to-configuration switch
              echo 'Deployment completed successfully!'
            else
              echo 'Test activation failed or timed out'
              exit 1
            fi
          "
        else
          echo "ERROR: Failed to copy closure to server"
          exit 1
        fi
