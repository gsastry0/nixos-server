# .github/workflows/build-and-deploy.yml
# Inspired by https://github.com/hraban/nixos-images

name: Build NixOS Configuration

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Install Nix
      uses: cachix/install-nix-action@v23
      with:
        extra_nix_config: |
          experimental-features = nix-command flakes
          
    - name: Setup Cachix (optional - speeds up builds)
      uses: cachix/cachix-action@v12
      with:
        name: nix-community
        
    - name: Build NixOS system configuration
      run: |
        # Build the system closure (like hraban's approach)
        nix build .#nixosConfigurations.droplet.config.system.build.toplevel \
          --print-build-logs \
          --out-link system-closure
          
    - name: Create deployment tarball
      run: |
        # Create a simpler deployment script
        echo "Built system successfully, ready for deployment"
        
    - name: Upload system closure
      uses: actions/upload-artifact@v3
      with:
        name: nixos-system-closure
        path: system-closure
        retention-days: 7
        
  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: nixos-system-closure
        
    - name: Install Nix
      uses: cachix/install-nix-action@v23
      
    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts
        
    - name: Deploy to server
      run: |
        # Get the store path of the built system
        SYSTEM_PATH=$(readlink ./system-closure)
        echo "System path: $SYSTEM_PATH"
        
        # Copy the closure to the server with timeout and retry
        timeout 900 nix-copy-closure --to root@${{ secrets.SERVER_HOST }} $SYSTEM_PATH
        
        # Activate the new configuration with error handling
        ssh root@${{ secrets.SERVER_HOST }} "
          set -e
          echo 'Starting activation...'
          if timeout 300 $SYSTEM_PATH/bin/switch-to-configuration test; then
            echo 'Test activation successful, making permanent...'
            $SYSTEM_PATH/bin/switch-to-configuration switch
            echo 'Deployment completed successfully!'
          else
            echo 'Test activation failed or timed out'
            exit 1
          fi
        "
